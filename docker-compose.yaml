version: '2.4'
#this is work version smb, goip server without pbx system
networks: 
 goipnet:
  name: ${NETWORK_NAME}
  driver: bridge
  driver_opts:
   com.docker.network.bridge.name: ${NETWORK_NAME}
  ipam:
   config:
    - subnet: ${DOCKER_SUBNET}
      gateway: ${DOCKER_GW}

services:
#first install uncomment entrypoint and run
#docker-compose up install  
 install:
  depends_on:
   - "db"
  networks:
   goipnet:
    ipv4_address: ${INSTALL_IP}
  privileged: true
  image: ${GOIP_DOCKER_IMAGE}
  container_name: install
  hostname: install
  env_file: 
   - ./security/asterisk.env
   - ./security/db.env
   - ./.env
  volumes:
   - ./distrib/script/install.sh:/install.sh:ro
   - ./distrib/sql/scheduler.sql:/scheduler.sql:ro
   - ./distrib/sql/goip.sql:/goip.sql:ro
     #   - ./distrib/sql/asterisk.sql:/asterisk.sql:ro
     #  entrypoint: [ "/install.sh"]
  entrypoint: ["echo", "Service install disabled"]

 sms:
  depends_on:
   - "db"
   - "web"
  networks:
   goipnet:
    ipv4_address: ${GOIP_DOCKER_LOCALNET_IP}
  privileged: true
  image: ${GOIP_DOCKER_IMAGE}
  container_name: ${GOIP_NAME}
  hostname: ${GOIP_NAME}
  environment:
   - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/lib_goip 
  env_file: 
   - ./security/db.env
   - ./.env
  working_dir: /
  restart: always
  ports:
   - ${GOIPCRONPORT}:${GOIPCRONPORT}/udp
  volumes:
   - ./distrib/script/goip_start.sh:/goip_start.sh:ro
     #   - ./distrib/bin/goipcron_x64:/usr/local/bin/goipcron_x64:ro
   - ./distrib/bin:/usr/local/bin:ro
  # tty: true
  # stdin_open: true
  entrypoint: [ "/goip_start.sh"]
  
 smb:
  depends_on:
   - "db"
   - "web"
  networks:
   goipnet:
    ipv4_address: ${SMB_DOCKER_LOCALNET_IP}
  privileged: true
  image: ${GOIP_DOCKER_IMAGE}
  container_name: ${SMB_NAME}
  hostname: ${SMB_NAME}
  environment: 
   - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/lib_goip 
  env_file: 
   - ./security/db.env
   - ./.env
  working_dir: /
  restart: always
  ports:
   - ${SMB_SCHED_UDP}:${SMB_SCHED_UDP}/udp
   - ${SMB_SCHED_TCP}:${SMB_SCHED_TCP}/tcp
   - ${XCHANGED_SMB_SCHED}:${XCHANGED_SMB_SCHED}/udp
  volumes:
   - ./distrib/bin/smb_scheduler:/usr/local/bin/smb_scheduler:rw
   - ./distrib/script/smb_start.sh:/smb_start.sh:ro
  # tty: true
  # stdin_open: true
  entrypoint: [ "/smb_start.sh"]

 xchanged:
  depends_on:
   - "db"
   - "web"
  networks:
   goipnet:
    ipv4_address: ${XCHANGED_DOCKER_LOCALNET_IP}
  privileged: true
  image: ${GOIP_DOCKER_IMAGE}
  container_name: ${XCHANGED_NAME}
  hostname: ${XCHANGED_NAME}
  environment:
   - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/lib_goip 
  env_file: 
   - ./security/db.env
   - ./.env
  working_dir: /
  restart: always
  ports:
   - ${SMB_XCHANGE_SMBMSVR_UDP}:${SMB_XCHANGE_SMBMSVR_UDP}/udp
   - ${SMB_XCHANGE_PHPSVR_UDP}:${SMB_XCHANGE_PHPSVR_UDP}/udp
  volumes:

   - ./distrib/bin/xchanged:/usr/local/bin/xchanged:ro
   - ./distrib/script/xchanged_start.sh:/xchanged_start.sh:ro
  # tty: true
  # stdin_open: true
  entrypoint: [ "/xchanged_start.sh"]

 radm:
  networks:
   goipnet:
    ipv4_address: ${RADM_DOCKER_LOCALNET_IP}
  privileged: true
  image: ${GOIP_DOCKER_IMAGE}
  container_name: ${RADM_NAME}
  hostname: ${RADM_NAME}
  volumes:
   - ./distrib/script/radm_start.sh:/radm_start.sh:ro
   - ./distrib/bin/radmsrvd:/usr/local/bin/radmsrvd:rw
  env_file: 
   - ./.env
   - ./security/radmin.env
  working_dir: /
  restart: always
  ports:
   - ${RADM_RADM_WEBPORT}:${RADM_RADM_WEBPORT}/tcp
   - ${RADM_CLIPORT}:${RADM_CLIPORT}/tcp
   - ${RADM_PORTRANGE}:${RADM_PORTRANGE}/tcp
     # volumes:
     #- ./distrib/script/radm_start.sh:/radm_start.sh:ro
  tty: true
  stdin_open: true
  entrypoint: ["/radm_start.sh"]

 db:
  env_file: 
   - ./security/db.env
   - ./.env
  container_name: ${NAME_MYSQL}
  hostname: ${NAME_MYSQL}
  image: vsamov/mysql-5.1.73
  volumes:
   - ./dbdata:/var/lib/mysql
  restart: always
  networks:
   goipnet:
    ipv4_address: ${IP_MYSQL}
  ports:
   - ${MYSQL_EXT_PORT}:3306/tcp
  
 web:
  env_file:
   - ./.env
   - ./security/db.env
     #   - ./security/asterisk.env
  networks:
   goipnet:
    ipv4_address: ${WWW_DOCKER_LOCALNET_IP}
  hostname: ${WWW_NAME}
  container_name: ${WWW_NAME}
  restart: always
  ports:
   - ${WEB_EXT_PORT}:80/tcp
  volumes:
    #  - ./www:/mnt/www:ro
   - ./www:/var/www/html:ro
   - ./logs:/var/log/apache2:rw
   - ./distrib/script/web_start.sh:/web_start.sh:ro
  image: athimel/apache2-php5-mysql
  entrypoint: ["/web_start.sh"]

    # asterisk:
    #  env_file:
    #   - ./.env
    #   - ./security/db.env
    #   - ./security/asterisk.env
    #  networks:
    #   goipnet:
    #    ipv4_address: ${ASTERISK_DOCKER_LOCALNET_IP}
    #  hostname: ${ASTERISK_NAME}
    #  container_name: ${ASTERISK_NAME}
  # restart: always
  #  ports:
    #   - ${ASTERISK_EXT_PORT}:${ASTERISK_EXT_PORT}/udp
    #  volumes:
    #   - ./config/asterisk:/mnt/asterisk:ro
    #   - ./distrib/lib/odbc:/lib/odbc:ro
    #   - ./distrib/script/asterisk_start.sh:/asterisk_start.sh:ro
    #   - ./sounds/asterisk/:/sounds/
    #  image: ${ASTERISK_IMAGE}
    #  entrypoint: ["/asterisk_start.sh"]

